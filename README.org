* Dotfiles Repository

NOTE: This README was generated by ChatGPT 4.

This repository contains dotfiles to help configure and set up the environment.

** Restoring Dotfiles After a System Reinstall

To restore the dotfiles after a system reinstall, follow the steps below:

1. **Clone the Repository**:
   Pull down the dotfiles repository into a bare repository in your home directory.
   #+BEGIN_SRC sh
   git clone --bare https://github.com/pschmied/dotfiles.git $HOME/.dotfiles
   #+END_SRC

2. **Define the Alias**:
   To ensure you can easily manage the dotfiles, define this alias:
   #+BEGIN_SRC sh
   alias dotfiles='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
   #+END_SRC
   Add the alias to your shell profile (`~/.bashrc`, `~/.zshrc`, etc.) to make it persistent.

3. **Checkout the Dotfiles**:
   Apply the dotfiles to your home directory with:
   #+BEGIN_SRC sh
   dotfiles checkout
   #+END_SRC
   Note: If you encounter errors due to existing files, back them up or remove them and try the checkout again.

4. **Set Up the Repository for Easy Management**:
   Make sure untracked files aren't shown when querying the dotfiles repository.
   #+BEGIN_SRC sh
   dotfiles config --local status.showUntrackedFiles no
   #+END_SRC

** Modifying and Updating Dotfiles

When you've made local changes to your dotfiles and wish to commit and push them:

1. **Check Changes**:
   First, review the changes you've made using:
   #+BEGIN_SRC sh
   dotfiles status
   dotfiles diff
   #+END_SRC

2. **Add and Commit Changes**:
   Assuming you've made changes to, for example, `.bashrc`:
   #+BEGIN_SRC sh
   dotfiles add .bashrc
   dotfiles commit -m "Updated .bashrc with new aliases."
   #+END_SRC

3. **Push Changes**:
   Once you're satisfied with your commits, push them:
   #+BEGIN_SRC sh
   dotfiles push origin master
   #+END_SRC

Feel free to fork, suggest changes, or ask questions if you have any!
